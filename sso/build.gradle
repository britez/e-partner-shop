apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: "jacoco"
apply plugin: 'maven'
apply plugin: 'docker'

group = 'com.epartner.shop'

version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'epartner-sso'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    compile "org.springframework.boot:spring-boot:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-actuator:${springBootVersion}"
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-mail:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    testCompile("org.springframework.boot:spring-boot-starter-test")
/*
    compile 'org.springframework.data:spring-data-commons:1.12.5.RELEASE'
*/
    compile("org.springframework.security.oauth:spring-security-oauth2:2.0.8.RELEASE")
    compile 'redis.clients:jedis:2.8.0'
    compile 'org.springframework.data:spring-data-redis:1.6.2.RELEASE'
    compile 'org.springframework.session:spring-session:1.0.2.RELEASE'
    compile 'org.apache.velocity:velocity:1.6.2'
    //Test dependencies
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile ('org.spockframework:spock-core:1.0-groovy-2.4'){
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'org.codehaus.groovy:groovy-all:2.4.1'
    compile 'net.logstash.logback:logstash-logback-encoder:4.5.1'
    compile group: 'com.h2database', name: 'h2', version: '1.4.192'

}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-config:1.0.2.RELEASE'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

docker {
    baseImage("java:8")
    maintainer("Maxi Britez")
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    dryRun = true
    applicationName = jar.baseName

    //dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }

    volume("/tmp", "/log")
    addFile("${jar.baseName}-${project.version}.jar", "app.jar")
    runCommand("bash -c 'touch /app.jar'")
    entryPoint(["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"])
}